// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/Models/characteristic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models {

  /// <summary>Holder for reflection information generated from protobuf/Models/characteristic.proto</summary>
  public static partial class CharacteristicReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/Models/characteristic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CharacteristicReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRwcm90b2J1Zi9Nb2RlbHMvY2hhcmFjdGVyaXN0aWMucHJvdG8SIFRvdXJu",
            "YW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9kZWxzGihwcm90b2J1Zi9Nb2RlbHMv",
            "YmVhdG1hcF9kaWZmaWN1bHR5LnByb3RvInQKDkNoYXJhY3RlcmlzdGljEhcK",
            "D3NlcmlhbGl6ZWRfbmFtZRgBIAEoCRJJCgxkaWZmaWN1bHRpZXMYAiADKA4y",
            "My5Ub3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5CZWF0bWFwRGlm",
            "ZmljdWx0eUIjqgIgVG91cm5hbWVudEFzc2lzdGFudFNoYXJlZC5Nb2RlbHNi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.SharedConstructs.BeatmapDifficultyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Characteristic), global::TournamentAssistantShared.Models.Characteristic.Parser, new[]{ "SerializedName", "Difficulties" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Characteristic : pb::IMessage<Characteristic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Characteristic> _parser = new pb::MessageParser<Characteristic>(() => new Characteristic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Characteristic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.CharacteristicReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Characteristic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Characteristic(Characteristic other) : this() {
      serializedName_ = other.serializedName_;
      difficulties_ = other.difficulties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Characteristic Clone() {
      return new Characteristic(this);
    }

    /// <summary>Field number for the "serialized_name" field.</summary>
    public const int SerializedNameFieldNumber = 1;
    private string serializedName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SerializedName {
      get { return serializedName_; }
      set {
        serializedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulties" field.</summary>
    public const int DifficultiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.SharedConstructs.BeatmapDifficulty> _repeated_difficulties_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::TournamentAssistantShared.SharedConstructs.BeatmapDifficulty) x);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.SharedConstructs.BeatmapDifficulty> difficulties_ = new pbc::RepeatedField<global::TournamentAssistantShared.SharedConstructs.BeatmapDifficulty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TournamentAssistantShared.SharedConstructs.BeatmapDifficulty> Difficulties {
      get { return difficulties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Characteristic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Characteristic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerializedName != other.SerializedName) return false;
      if(!difficulties_.Equals(other.difficulties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SerializedName.Length != 0) hash ^= SerializedName.GetHashCode();
      hash ^= difficulties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SerializedName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerializedName);
      }
      difficulties_.WriteTo(output, _repeated_difficulties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SerializedName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerializedName);
      }
      difficulties_.WriteTo(ref output, _repeated_difficulties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SerializedName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerializedName);
      }
      size += difficulties_.CalculateSize(_repeated_difficulties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Characteristic other) {
      if (other == null) {
        return;
      }
      if (other.SerializedName.Length != 0) {
        SerializedName = other.SerializedName;
      }
      difficulties_.Add(other.difficulties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerializedName = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            difficulties_.AddEntriesFrom(input, _repeated_difficulties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerializedName = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            difficulties_.AddEntriesFrom(ref input, _repeated_difficulties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
