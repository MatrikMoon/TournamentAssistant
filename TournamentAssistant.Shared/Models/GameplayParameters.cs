// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/Models/gameplay_parameters.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models {

  /// <summary>Holder for reflection information generated from protobuf/Models/gameplay_parameters.proto</summary>
  public static partial class GameplayParametersReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/Models/gameplay_parameters.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameplayParametersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilwcm90b2J1Zi9Nb2RlbHMvZ2FtZXBsYXlfcGFyYW1ldGVycy5wcm90bxIg",
            "VG91cm5hbWVudEFzc2lzdGFudFNoYXJlZC5Nb2RlbHMaHXByb3RvYnVmL01v",
            "ZGVscy9iZWF0bWFwLnByb3RvGi5wcm90b2J1Zi9Nb2RlbHMvcGxheWVyX3Nw",
            "ZWNpZmljX3NldHRpbmdzLnByb3RvGihwcm90b2J1Zi9Nb2RlbHMvZ2FtZXBs",
            "YXlfbW9kaWZpZXJzLnByb3RvIvQBChJHYW1lcGxheVBhcmFtZXRlcnMSOgoH",
            "YmVhdG1hcBgBIAEoCzIpLlRvdXJuYW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9k",
            "ZWxzLkJlYXRtYXASUQoPcGxheWVyX3NldHRpbmdzGAIgASgLMjguVG91cm5h",
            "bWVudEFzc2lzdGFudFNoYXJlZC5Nb2RlbHMuUGxheWVyU3BlY2lmaWNTZXR0",
            "aW5ncxJPChJnYW1lcGxheV9tb2RpZmllcnMYAyABKAsyMy5Ub3VybmFtZW50",
            "QXNzaXN0YW50U2hhcmVkLk1vZGVscy5HYW1lcGxheU1vZGlmaWVyc0IjqgIg",
            "VG91cm5hbWVudEFzc2lzdGFudFNoYXJlZC5Nb2RlbHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.Models.BeatmapReflection.Descriptor, global::TournamentAssistantShared.Models.PlayerSpecificSettingsReflection.Descriptor, global::TournamentAssistantShared.Models.GameplayModifiersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.GameplayParameters), global::TournamentAssistantShared.Models.GameplayParameters.Parser, new[]{ "Beatmap", "PlayerSettings", "GameplayModifiers" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameplayParameters : pb::IMessage<GameplayParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameplayParameters> _parser = new pb::MessageParser<GameplayParameters>(() => new GameplayParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameplayParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.GameplayParametersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayParameters(GameplayParameters other) : this() {
      beatmap_ = other.beatmap_ != null ? other.beatmap_.Clone() : null;
      playerSettings_ = other.playerSettings_ != null ? other.playerSettings_.Clone() : null;
      gameplayModifiers_ = other.gameplayModifiers_ != null ? other.gameplayModifiers_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayParameters Clone() {
      return new GameplayParameters(this);
    }

    /// <summary>Field number for the "beatmap" field.</summary>
    public const int BeatmapFieldNumber = 1;
    private global::TournamentAssistantShared.Models.Beatmap beatmap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Beatmap Beatmap {
      get { return beatmap_; }
      set {
        beatmap_ = value;
      }
    }

    /// <summary>Field number for the "player_settings" field.</summary>
    public const int PlayerSettingsFieldNumber = 2;
    private global::TournamentAssistantShared.Models.PlayerSpecificSettings playerSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.PlayerSpecificSettings PlayerSettings {
      get { return playerSettings_; }
      set {
        playerSettings_ = value;
      }
    }

    /// <summary>Field number for the "gameplay_modifiers" field.</summary>
    public const int GameplayModifiersFieldNumber = 3;
    private global::TournamentAssistantShared.Models.GameplayModifiers gameplayModifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.GameplayModifiers GameplayModifiers {
      get { return gameplayModifiers_; }
      set {
        gameplayModifiers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameplayParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameplayParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Beatmap, other.Beatmap)) return false;
      if (!object.Equals(PlayerSettings, other.PlayerSettings)) return false;
      if (!object.Equals(GameplayModifiers, other.GameplayModifiers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (beatmap_ != null) hash ^= Beatmap.GetHashCode();
      if (playerSettings_ != null) hash ^= PlayerSettings.GetHashCode();
      if (gameplayModifiers_ != null) hash ^= GameplayModifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (beatmap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Beatmap);
      }
      if (playerSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GameplayModifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (beatmap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Beatmap);
      }
      if (playerSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GameplayModifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (beatmap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Beatmap);
      }
      if (playerSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameplayModifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameplayParameters other) {
      if (other == null) {
        return;
      }
      if (other.beatmap_ != null) {
        if (beatmap_ == null) {
          Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
        }
        Beatmap.MergeFrom(other.Beatmap);
      }
      if (other.playerSettings_ != null) {
        if (playerSettings_ == null) {
          PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
        }
        PlayerSettings.MergeFrom(other.PlayerSettings);
      }
      if (other.gameplayModifiers_ != null) {
        if (gameplayModifiers_ == null) {
          GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
        }
        GameplayModifiers.MergeFrom(other.GameplayModifiers);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 18: {
            if (playerSettings_ == null) {
              PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
            }
            input.ReadMessage(PlayerSettings);
            break;
          }
          case 26: {
            if (gameplayModifiers_ == null) {
              GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
            }
            input.ReadMessage(GameplayModifiers);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 18: {
            if (playerSettings_ == null) {
              PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
            }
            input.ReadMessage(PlayerSettings);
            break;
          }
          case 26: {
            if (gameplayModifiers_ == null) {
              GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
            }
            input.ReadMessage(GameplayModifiers);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
