// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/Models/Packets/song_finished.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models.Packets {

  /// <summary>Holder for reflection information generated from protobuf/Models/Packets/song_finished.proto</summary>
  public static partial class SongFinishedReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/Models/Packets/song_finished.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SongFinishedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citwcm90b2J1Zi9Nb2RlbHMvUGFja2V0cy9zb25nX2ZpbmlzaGVkLnByb3Rv",
            "EihUb3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5QYWNrZXRzGhxw",
            "cm90b2J1Zi9Nb2RlbHMvcGxheWVyLnByb3RvGh1wcm90b2J1Zi9Nb2RlbHMv",
            "YmVhdG1hcC5wcm90byKaAgoMU29uZ0ZpbmlzaGVkEjYKBHVzZXIYASABKAsy",
            "KC5Ub3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5QbGF5ZXISOgoH",
            "YmVhdG1hcBgCIAEoCzIpLlRvdXJuYW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9k",
            "ZWxzLkJlYXRtYXASUwoEdHlwZRgDIAEoDjJFLlRvdXJuYW1lbnRBc3Npc3Rh",
            "bnRTaGFyZWQuTW9kZWxzLlBhY2tldHMuU29uZ0ZpbmlzaGVkLkNvbXBsZXRp",
            "b25UeXBlEg0KBXNjb3JlGAQgASgFIjIKDkNvbXBsZXRpb25UeXBlEgoKBkZh",
            "aWxlZBAAEgoKBlBhc3NlZBABEggKBFF1aXQQAkIrqgIoVG91cm5hbWVudEFz",
            "c2lzdGFudFNoYXJlZC5Nb2RlbHMuUGFja2V0c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.Models.PlayerReflection.Descriptor, global::TournamentAssistantShared.Models.BeatmapReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Packets.SongFinished), global::TournamentAssistantShared.Models.Packets.SongFinished.Parser, new[]{ "User", "Beatmap", "Type", "Score" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SongFinished : pb::IMessage<SongFinished>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SongFinished> _parser = new pb::MessageParser<SongFinished>(() => new SongFinished());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SongFinished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.Packets.SongFinishedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongFinished() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongFinished(SongFinished other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      beatmap_ = other.beatmap_ != null ? other.beatmap_.Clone() : null;
      type_ = other.type_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongFinished Clone() {
      return new SongFinished(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::TournamentAssistantShared.Models.Player user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Player User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "beatmap" field.</summary>
    public const int BeatmapFieldNumber = 2;
    private global::TournamentAssistantShared.Models.Beatmap beatmap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Beatmap Beatmap {
      get { return beatmap_; }
      set {
        beatmap_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType type_ = global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SongFinished);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SongFinished other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Beatmap, other.Beatmap)) return false;
      if (Type != other.Type) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (beatmap_ != null) hash ^= Beatmap.GetHashCode();
      if (Type != global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed) hash ^= Type.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (beatmap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Beatmap);
      }
      if (Type != global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (beatmap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Beatmap);
      }
      if (Type != global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (beatmap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Beatmap);
      }
      if (Type != global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SongFinished other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::TournamentAssistantShared.Models.Player();
        }
        User.MergeFrom(other.User);
      }
      if (other.beatmap_ != null) {
        if (beatmap_ == null) {
          Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
        }
        Beatmap.MergeFrom(other.Beatmap);
      }
      if (other.Type != global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType.Failed) {
        Type = other.Type;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.Player();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 24: {
            Type = (global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType) input.ReadEnum();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.Player();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 24: {
            Type = (global::TournamentAssistantShared.Models.Packets.SongFinished.Types.CompletionType) input.ReadEnum();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SongFinished message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompletionType {
        [pbr::OriginalName("Failed")] Failed = 0,
        [pbr::OriginalName("Passed")] Passed = 1,
        [pbr::OriginalName("Quit")] Quit = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
