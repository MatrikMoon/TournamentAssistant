// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/Models/Packets/file.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models.Packets {

  /// <summary>Holder for reflection information generated from protobuf/Models/Packets/file.proto</summary>
  public static partial class FileReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/Models/Packets/file.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJwcm90b2J1Zi9Nb2RlbHMvUGFja2V0cy9maWxlLnByb3RvEihUb3VybmFt",
            "ZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5QYWNrZXRzItMBCgRGaWxlEg8K",
            "B2ZpbGVfaWQYASABKAkSSQoGaW50ZW50GAIgASgOMjkuVG91cm5hbWVudEFz",
            "c2lzdGFudFNoYXJlZC5Nb2RlbHMuUGFja2V0cy5GaWxlLkludGVudGlvbnMS",
            "EgoKY29tcHJlc3NlZBgDIAEoCBIMCgRkYXRhGAQgASgMIk0KCkludGVudGlv",
            "bnMSCAoETm9uZRAAEh0KGVNldFBuZ1RvU2hvd1doZW5UcmlnZ2VyZWQQARIW",
            "ChJTaG93UG5nSW1tZWRpYXRlbHkQAkIrqgIoVG91cm5hbWVudEFzc2lzdGFu",
            "dFNoYXJlZC5Nb2RlbHMuUGFja2V0c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Packets.File), global::TournamentAssistantShared.Models.Packets.File.Parser, new[]{ "FileId", "Intent", "Compressed", "Data" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.Packets.File.Types.Intentions) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class File : pb::IMessage<File>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<File> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.Packets.FileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File(File other) : this() {
      fileId_ = other.fileId_;
      intent_ = other.intent_;
      compressed_ = other.compressed_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File Clone() {
      return new File(this);
    }

    /// <summary>Field number for the "file_id" field.</summary>
    public const int FileIdFieldNumber = 1;
    private string fileId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileId {
      get { return fileId_; }
      set {
        fileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 2;
    private global::TournamentAssistantShared.Models.Packets.File.Types.Intentions intent_ = global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Packets.File.Types.Intentions Intent {
      get { return intent_; }
      set {
        intent_ = value;
      }
    }

    /// <summary>Field number for the "compressed" field.</summary>
    public const int CompressedFieldNumber = 3;
    private bool compressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Compressed {
      get { return compressed_; }
      set {
        compressed_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as File);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(File other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileId != other.FileId) return false;
      if (Intent != other.Intent) return false;
      if (Compressed != other.Compressed) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileId.Length != 0) hash ^= FileId.GetHashCode();
      if (Intent != global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None) hash ^= Intent.GetHashCode();
      if (Compressed != false) hash ^= Compressed.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FileId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileId);
      }
      if (Intent != global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Intent);
      }
      if (Compressed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Compressed);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FileId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileId);
      }
      if (Intent != global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Intent);
      }
      if (Compressed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Compressed);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileId);
      }
      if (Intent != global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Intent);
      }
      if (Compressed != false) {
        size += 1 + 1;
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(File other) {
      if (other == null) {
        return;
      }
      if (other.FileId.Length != 0) {
        FileId = other.FileId;
      }
      if (other.Intent != global::TournamentAssistantShared.Models.Packets.File.Types.Intentions.None) {
        Intent = other.Intent;
      }
      if (other.Compressed != false) {
        Compressed = other.Compressed;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileId = input.ReadString();
            break;
          }
          case 16: {
            Intent = (global::TournamentAssistantShared.Models.Packets.File.Types.Intentions) input.ReadEnum();
            break;
          }
          case 24: {
            Compressed = input.ReadBool();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FileId = input.ReadString();
            break;
          }
          case 16: {
            Intent = (global::TournamentAssistantShared.Models.Packets.File.Types.Intentions) input.ReadEnum();
            break;
          }
          case 24: {
            Compressed = input.ReadBool();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the File message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Intentions {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///Image will be stored in the StreamSyncController and displayed when the DelayTest_Trigger command is received
        /// </summary>
        [pbr::OriginalName("SetPngToShowWhenTriggered")] SetPngToShowWhenTriggered = 1,
        /// <summary>
        ///Image will be immediately displayed if the StreamSyncController is active
        /// </summary>
        [pbr::OriginalName("ShowPngImmediately")] ShowPngImmediately = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
