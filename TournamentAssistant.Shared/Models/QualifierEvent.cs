// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/Models/qualifier_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models {

  /// <summary>Holder for reflection information generated from protobuf/Models/qualifier_event.proto</summary>
  public static partial class QualifierEventReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/Models/qualifier_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QualifierEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVwcm90b2J1Zi9Nb2RlbHMvcXVhbGlmaWVyX2V2ZW50LnByb3RvEiBUb3Vy",
            "bmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscxojcHJvdG9idWYvTW9kZWxz",
            "L0Rpc2NvcmQvZ3VpbGQucHJvdG8aJXByb3RvYnVmL01vZGVscy9EaXNjb3Jk",
            "L2NoYW5uZWwucHJvdG8aKXByb3RvYnVmL01vZGVscy9nYW1lcGxheV9wYXJh",
            "bWV0ZXJzLnByb3RvIpIDCg5RdWFsaWZpZXJFdmVudBIQCghldmVudF9pZBgB",
            "IAEoCRIMCgRuYW1lGAIgASgJEj4KBWd1aWxkGAMgASgLMi8uVG91cm5hbWVu",
            "dEFzc2lzdGFudFNoYXJlZC5Nb2RlbHMuRGlzY29yZC5HdWlsZBJHCgxpbmZv",
            "X2NoYW5uZWwYBCABKAsyMS5Ub3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1v",
            "ZGVscy5EaXNjb3JkLkNoYW5uZWwSTAoOcXVhbGlmaWVyX21hcHMYBSADKAsy",
            "NC5Ub3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5HYW1lcGxheVBh",
            "cmFtZXRlcnMSIwobc2VuZF9zY29yZXNfdG9faW5mb19jaGFubmVsGAYgASgI",
            "Eg0KBWZsYWdzGAcgASgFIlUKDUV2ZW50U2V0dGluZ3MSCAoETm9uZRAAEhkK",
            "FUhpZGVTY29yZXNGcm9tUGxheWVycxABEh8KG0Rpc2FibGVTY29yZXNhYmVy",
            "U3VibWlzc2lvbhACQiOqAiBUb3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1v",
            "ZGVsc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.Models.Discord.GuildReflection.Descriptor, global::TournamentAssistantShared.Models.Discord.ChannelReflection.Descriptor, global::TournamentAssistantShared.Models.GameplayParametersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.QualifierEvent), global::TournamentAssistantShared.Models.QualifierEvent.Parser, new[]{ "EventId", "Name", "Guild", "InfoChannel", "QualifierMaps", "SendScoresToInfoChannel", "Flags" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.QualifierEvent.Types.EventSettings) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QualifierEvent : pb::IMessage<QualifierEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QualifierEvent> _parser = new pb::MessageParser<QualifierEvent>(() => new QualifierEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QualifierEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.QualifierEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierEvent(QualifierEvent other) : this() {
      eventId_ = other.eventId_;
      name_ = other.name_;
      guild_ = other.guild_ != null ? other.guild_.Clone() : null;
      infoChannel_ = other.infoChannel_ != null ? other.infoChannel_.Clone() : null;
      qualifierMaps_ = other.qualifierMaps_.Clone();
      sendScoresToInfoChannel_ = other.sendScoresToInfoChannel_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierEvent Clone() {
      return new QualifierEvent(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guild" field.</summary>
    public const int GuildFieldNumber = 3;
    private global::TournamentAssistantShared.Models.Discord.Guild guild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Discord.Guild Guild {
      get { return guild_; }
      set {
        guild_ = value;
      }
    }

    /// <summary>Field number for the "info_channel" field.</summary>
    public const int InfoChannelFieldNumber = 4;
    private global::TournamentAssistantShared.Models.Discord.Channel infoChannel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TournamentAssistantShared.Models.Discord.Channel InfoChannel {
      get { return infoChannel_; }
      set {
        infoChannel_ = value;
      }
    }

    /// <summary>Field number for the "qualifier_maps" field.</summary>
    public const int QualifierMapsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.GameplayParameters> _repeated_qualifierMaps_codec
        = pb::FieldCodec.ForMessage(42, global::TournamentAssistantShared.Models.GameplayParameters.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters> qualifierMaps_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters> QualifierMaps {
      get { return qualifierMaps_; }
    }

    /// <summary>Field number for the "send_scores_to_info_channel" field.</summary>
    public const int SendScoresToInfoChannelFieldNumber = 6;
    private bool sendScoresToInfoChannel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendScoresToInfoChannel {
      get { return sendScoresToInfoChannel_; }
      set {
        sendScoresToInfoChannel_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 7;
    private int flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QualifierEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QualifierEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Guild, other.Guild)) return false;
      if (!object.Equals(InfoChannel, other.InfoChannel)) return false;
      if(!qualifierMaps_.Equals(other.qualifierMaps_)) return false;
      if (SendScoresToInfoChannel != other.SendScoresToInfoChannel) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (guild_ != null) hash ^= Guild.GetHashCode();
      if (infoChannel_ != null) hash ^= InfoChannel.GetHashCode();
      hash ^= qualifierMaps_.GetHashCode();
      if (SendScoresToInfoChannel != false) hash ^= SendScoresToInfoChannel.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (guild_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Guild);
      }
      if (infoChannel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoChannel);
      }
      qualifierMaps_.WriteTo(output, _repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        output.WriteRawTag(48);
        output.WriteBool(SendScoresToInfoChannel);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (guild_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Guild);
      }
      if (infoChannel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoChannel);
      }
      qualifierMaps_.WriteTo(ref output, _repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        output.WriteRawTag(48);
        output.WriteBool(SendScoresToInfoChannel);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (guild_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guild);
      }
      if (infoChannel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoChannel);
      }
      size += qualifierMaps_.CalculateSize(_repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        size += 1 + 1;
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QualifierEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.guild_ != null) {
        if (guild_ == null) {
          Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
        }
        Guild.MergeFrom(other.Guild);
      }
      if (other.infoChannel_ != null) {
        if (infoChannel_ == null) {
          InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
        }
        InfoChannel.MergeFrom(other.InfoChannel);
      }
      qualifierMaps_.Add(other.qualifierMaps_);
      if (other.SendScoresToInfoChannel != false) {
        SendScoresToInfoChannel = other.SendScoresToInfoChannel;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (guild_ == null) {
              Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
          case 34: {
            if (infoChannel_ == null) {
              InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
            }
            input.ReadMessage(InfoChannel);
            break;
          }
          case 42: {
            qualifierMaps_.AddEntriesFrom(input, _repeated_qualifierMaps_codec);
            break;
          }
          case 48: {
            SendScoresToInfoChannel = input.ReadBool();
            break;
          }
          case 56: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (guild_ == null) {
              Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
          case 34: {
            if (infoChannel_ == null) {
              InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
            }
            input.ReadMessage(InfoChannel);
            break;
          }
          case 42: {
            qualifierMaps_.AddEntriesFrom(ref input, _repeated_qualifierMaps_codec);
            break;
          }
          case 48: {
            SendScoresToInfoChannel = input.ReadBool();
            break;
          }
          case 56: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the QualifierEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EventSettings {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("HideScoresFromPlayers")] HideScoresFromPlayers = 1,
        [pbr::OriginalName("DisableScoresaberSubmission")] DisableScoresaberSubmission = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
